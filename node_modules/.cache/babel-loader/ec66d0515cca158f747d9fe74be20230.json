{"ast":null,"code":"var _jsxFileName = \"c:\\\\wamp64\\\\www\\\\discord-clone\\\\src\\\\Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\n\nfunction Chat() {\n  useEffect(() => {}, []);\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    channelName: channelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    disabled: !channelId,\n    onChange: e => setInput(e.target.value),\n    placeholder: `Message #${channelName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chat__inputButton\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Send message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__inputIcons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardGiftcardIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(GifIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(EmojiEmotionsIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["c:/wamp64/www/discord-clone/src/Chat.js"],"names":["React","useEffect","useState","ChatHeader","AddCircleIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Message","useSelector","selectUser","selectChannelId","selectChannelName","Chat","user","channelId","channelName","input","setInput","messages","setMessages","map","message","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,qBAAnD;;AAEA,SAASC,IAAT,GAAgB;AAEZZ,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEP,EAFO,CAAT;AAIA,QAAMa,IAAI,GAAGL,WAAW,CAACC,UAAD,CAAxB;AACA,QAAMK,SAAS,GAAGN,WAAW,CAACE,eAAD,CAA7B;AACA,QAAMK,WAAW,GAAGP,WAAW,CAACG,iBAAD,CAA/B;AAEA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBhB,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEc,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,QAAQ,CAACE,GAAT,CAAaC,OAAO,iBACjB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAHJ,eASI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEL,KAAd;AAAqB,IAAA,QAAQ,EAAE,CAACF,SAAhC;AAA2C,IAAA,QAAQ,EAAEQ,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlE;AAAoF,IAAA,WAAW,EAAG,YAAWT,WAAY,EAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAFJ,eAOI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,CATJ,CADJ;AA0BH;;AAED,eAAeH,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Chat.css'\r\nimport ChatHeader from './ChatHeader';\r\n\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport Message from './Message';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport { selectChannelId, selectChannelName } from './features/appSlice';\r\n\r\nfunction Chat() {\r\n\r\n    useEffect(() => {\r\n\r\n    },[]);\r\n\r\n    const user = useSelector(selectUser);\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n\r\n    const [input,setInput] = useState('');\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={channelName}></ChatHeader>\r\n\r\n            <div className=\"chat__messages\">\r\n                {messages.map(message => (\r\n                    <Message/>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize=\"large\"/>\r\n                <form>\r\n                    <input value={input} disabled={!channelId} onChange={e => setInput(e.target.value)} placeholder={`Message #${channelName}`}/>\r\n                    <button className=\"chat__inputButton\" type=\"submit\">Send message</button>\r\n                </form>\r\n\r\n                <div className=\"chat__inputIcons\">\r\n                    <CardGiftcardIcon fontSize=\"large\"/>\r\n                    <GifIcon fontSize=\"large\"/>\r\n                    <EmojiEmotionsIcon fontSize=\"large\"/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}